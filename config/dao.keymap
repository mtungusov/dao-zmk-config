/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define LAYER_Engram 0
#define LAYER_QWERTY 1
#define LAYER_Nav 2
#define LAYER_Num 3
#define LAYER_Sym 4
#define LAYER_Func 5
#define LAYER_Sys 6
#define ALPHAS LAYER_Engram LAYER_QWERTY

&lt {
    tapping-term-ms = <120>;
    quick_tap_ms = <200>;
};

&mt {
    tapping-term-ms = <120>;
    quick_tap_ms = <75>;
};

&caps_word { continue-list = <UNDERSCORE MINUS BSPC DELETE N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_caps_word {
            timeout-ms = <100>;
            key-positions = <18 21>;
            bindings = <&caps_word>;
            layers = <ALPHAS>;
        };
    };
};

/ {
    chosen { zmk,matrix_transform = &extra_keys_transform; };
};

/ {
    behaviors {
        hi: homerow_mods_index_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_INDEX_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods_middle_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_MIDDLE_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hr: homerow_mods_ring_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RING_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hp: homerow_mods_pinky_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PINKY_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        //
        // Custom shifted pairs for the Engram layout
        // https://engram.dev/
        //

        engram_apos: apostrophe_and_left_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "APOSTROPHE_AND_LEFT_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp APOSTROPHE>, <&kp LEFT_PARENTHESIS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        engram_dquote: double_quotes_and_right_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "DOUBLE_QUOTES_AND_RIGHT_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES>, <&kp RIGHT_PARENTHESIS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        engram_comma: comma_and_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_AND_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        engram_period: period_and_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_AND_COLON";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        engram_question: question_and_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_AND_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_Engram {
            bindings = <
&none  &kp LBKT   &kp B       &kp Y       &kp O         &kp U               &engram_apos         &engram_dquote       &kp L                &kp D               &kp W       &kp V       &kp Z     &tog LAYER_QWERTY
       &kp BSLH   &hp LCMD C  &hr LALT I  &hm LCTRL E   &hi LSHFT A         &engram_comma        &engram_period       &hi RSHFT H          &hm RCTRL T         &hr RALT S  &hp RCMD N  &kp Q
       &kp GRAVE  &kp G       &kp X       &kp J         &kp K               &kp MINUS            &engram_question     &kp R                &kp M               &kp F       &kp P       &kp RBKT
                                          &mt LALT ESC  &mt LCMD BACKSPACE  &lt LAYER_Num TAB    &lt LAYER_Sym ENTER  &lt LAYER_Nav SPACE  &lt LAYER_Func DEL
            >;
        };

        layer_QWERTY {
            bindings = <
&none  &kp LBKT   &kp Q       &kp W       &kp E         &kp R               &kp T                &kp Y                &kp U                &kp I               &kp O       &kp P          &kp RBKT   &tog LAYER_QWERTY
       &kp BSLH   &hp LCMD A  &hr LALT S  &hm LCTRL D   &hi LSHFT F         &kp G                &kp H                &hi RSHFT J          &hm RCTRL K         &hr RALT L  &hp RCMD SEMI  &kp SQT
       &kp GRAVE  &kp Z       &kp X       &kp C         &kp V               &kp B                &kp N                &kp M                &kp COMMA           &kp DOT     &kp FSLH       &kp EQUAL
                                          &mt LALT ESC  &mt LCMD BACKSPACE  &lt LAYER_Num TAB    &lt LAYER_Sym ENTER  &lt LAYER_Nav SPACE  &lt LAYER_Func DEL
            >;
        };

        layer_Nav {
            bindings = <
&none  &kp GLOBE   &none     &kp LC(A)  &kp LC(B)  &kp LC(F)  &kp LC(E)    &kp HOME       &kp PG_DN      &kp PG_UP      &kp END        &none  &none  &none
       &caps_word  &kp LGUI  &kp LALT   &kp LCTRL  &kp LSHFT  &none        &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT      &none  &none
       &kp F16     &none     &kp LA(A)  &kp LA(B)  &kp LA(F)  &kp LA(E)    &kp LC(LA(A))  &kp LC(LA(B))  &kp LC(LA(F))  &kp LC(LA(E))  &none  &none
                                        &none      &none      &kp TAB      &none          &trans         &none
            >;
        };

        layer_Num {
            bindings = <
&none  &none  &none     &none     &none          &none      &none     &kp N7        &kp N8  &kp N9      &kp N0           &kp KP_EQUAL   &none  &none
       &none  &kp LCMD  &kp LALT  &kp LCTRL      &kp LSHFT  &none     &kp N4        &kp N5  &kp N6      &kp KP_PLUS      &kp KP_MINUS   &none
       &none  &none     &none     &none          &none      &none     &kp N1        &kp N2  &kp N3      &kp KP_MULTIPLY  &kp KP_DIVIDE  &none
                                  &mo LAYER_Sys  &none      &trans    &kp KP_ENTER  &none   &kp KP_DOT
            >;
        };

        layer_Sym {
            bindings = <
&none  &kp LBKT   &kp LBRC  &kp BSLH  &kp CARET  &kp ASTRK  &kp LPAR     &kp SEMI   &kp AT     &kp UNDER      &kp PRCNT  &kp HASH  &kp GRAVE  &none
       &kp RBKT   &kp RBRC  &kp EXCL  &kp EQUAL  &kp PLUS   &kp RPAR     &kp COLON  &kp RSHFT  &kp RCTRL      &kp RALT   &kp RCMD  &kp DQT
       &kp TILDE  &kp AMPS  &kp PIPE  &kp LT     &kp GT     &kp MINUS    &kp QMARK  &kp FSLH   &none          &none      &kp DLLR  &kp SQT
                                      &none      &none      &none        &trans     &none      &mo LAYER_Sys
            >;
        };

        layer_Func {
            bindings = <
&none  &kp GLOBE   &none  &none     &none      &none      &none    &kp F9  &kp F10  &kp F11  &kp F12  &none  &kp C_VOL_UP  &none
       &caps_word  &none  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp F5  &kp F6   &kp F7   &kp F8   &none  &kp C_MUTE
       &kp F16     &none  &none     &none      &none      &none    &kp F1  &kp F2   &kp F3   &kp F4   &none  &kp C_VOL_DN
                                    &kp LCMD   &none      &none    &none   &none    &trans
            >;
        };

        layer_Sys {
            bindings = <
&sys_reset  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                     &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
